version: '3.3'

x-airflow-common:
  &airflow-common
  image: ${IMAGE_TAG}
  environment:
    - AIRFLOW__WEBSERVER__WARN_DEPLOYMENT_EXPOSURE=False
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__STORE_DAG_CODE=True
    - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    - AIRFLOW__WEBSERVER__RBAC=False
    - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth
  volumes:
    - ./dags:/opt/airflow/dags
    - logs:/opt/airflow/logs
    - ./configurations.json:/tmp/conf_file/configurations.json:ro
    - ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
  networks:
    - airflow-net

services:
  postgres:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    networks:
      - airflow-net
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  init:
    <<: *airflow-common
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username airflow --password airflow --firstname air --lastname flow --role Admin --email airflow@gmail.com"
    depends_on:
      - postgres
    restart: "no"

  webserver:
    <<: *airflow-common
    command: webserver
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - init

  scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      - init
      - webserver

volumes:
  logs:
  postgres-db-volume:  # ❗ Данные хранятся здесь. Не удаляй без резервной копии

networks:
  airflow-net:
    driver: bridge
